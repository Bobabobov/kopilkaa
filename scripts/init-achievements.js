// scripts/init-achievements.js
const { PrismaClient } = require("@prisma/client");

const prisma = new PrismaClient();

// –ë–∞–∑–æ–≤—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
const defaultAchievements = [
  // === –ó–ê–Ø–í–ö–ò ===
  {
    name: '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏',
    description: '–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ—é –ø–µ—Ä–≤—É—é –∑–∞—è–≤–∫—É',
    icon: 'FileText',
    rarity: 'COMMON',
    type: 'APPLICATIONS',
    isExclusive: false,
    maxCount: 1,
    isActive: true,
  },
  {
    name: '–ü–æ–º–æ—â–Ω–∏–∫',
    description: '–°–æ–∑–¥–∞–π—Ç–µ 5 –∑–∞—è–≤–æ–∫',
    icon: 'Users',
    rarity: 'RARE',
    type: 'APPLICATIONS',
    isExclusive: false,
    maxCount: 1,
    isActive: true,
  },
  {
    name: '–ê–∫—Ç–∏–≤–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫',
    description: '–°–æ–∑–¥–∞–π—Ç–µ 10 –∑–∞—è–≤–æ–∫',
    icon: 'Star',
    rarity: 'EPIC',
    type: 'APPLICATIONS',
    isExclusive: false,
    maxCount: 1,
    isActive: true,
  },
  {
    name: '–û–¥–æ–±—Ä–µ–Ω–Ω–∞—è –∑–∞—è–≤–∫–∞',
    description: '–ü–æ–ª—É—á–∏—Ç–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–π –∑–∞—è–≤–∫–∏',
    icon: 'CheckCircle',
    rarity: 'RARE',
    type: 'APPLICATIONS',
    isExclusive: false,
    maxCount: 1,
    isActive: true,
  },

  // === –ò–ì–†–´ ===
  {
    name: '–ü–µ—Ä–≤—ã–π —Ä–µ–∫–æ—Ä–¥',
    description: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ä–µ–∫–æ—Ä–¥ –≤ –ª—é–±–æ–π –∏–≥—Ä–µ',
    icon: 'Gamepad2',
    rarity: 'COMMON',
    type: 'GAMES',
    isExclusive: false,
    maxCount: 1,
    isActive: true,
  },
  {
    name: '–ú–∞—Å—Ç–µ—Ä –ø–æ–ª—ë—Ç–∞',
    description: '–ù–∞–±–µ—Ä–∏—Ç–µ 100+ –æ—á–∫–æ–≤ –≤ Leaf Flight',
    icon: 'Zap',
    rarity: 'RARE',
    type: 'GAMES',
    isExclusive: false,
    maxCount: 1,
    isActive: true,
  },

  // === –°–û–¶–ò–ê–õ–¨–ù–´–ï ===
  {
    name: '–ü–µ—Ä–≤—ã–π –¥—Ä—É–≥',
    description: '–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤–æ–≥–æ –¥—Ä—É–≥–∞',
    icon: 'Heart',
    rarity: 'COMMON',
    type: 'SOCIAL',
    isExclusive: false,
    maxCount: 1,
    isActive: true,
  },

  // === –°–ï–†–ò–ò ===
  {
    name: '–ù–∞—á–∞–ª–æ –ø—É—Ç–∏',
    description: '–í—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç 3 –¥–Ω—è –ø–æ–¥—Ä—è–¥',
    icon: 'Flame',
    rarity: 'COMMON',
    type: 'STREAK',
    isExclusive: false,
    maxCount: 1,
    isActive: true,
  },

  // === –°–û–û–ë–©–ï–°–¢–í–û ===
  {
    name: '–ü–æ–º–æ—â–Ω–∏–∫ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞',
    description: '–ü–æ–º–æ–≥–∏—Ç–µ 5 –ª—é–¥—è–º (–ª–∞–π–∫–Ω–∏—Ç–µ –∏—Ö –∏—Å—Ç–æ—Ä–∏–∏)',
    icon: 'Heart',
    rarity: 'RARE',
    type: 'COMMUNITY',
    isExclusive: false,
    maxCount: 1,
    isActive: true,
  },

  // === –û–°–û–ë–´–ï ===
  {
    name: '–ü–µ—Ä–≤–æ–ø—Ä–æ—Ö–æ–¥–µ—Ü',
    description: '–°—Ç–∞–ª–∏ –æ–¥–Ω–∏–º –∏–∑ –ø–µ—Ä–≤—ã—Ö 100 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π',
    icon: 'Rocket',
    rarity: 'EXCLUSIVE',
    type: 'SPECIAL',
    isExclusive: true,
    maxCount: 1,
    isActive: true,
  },
];

async function initAchievements() {
  try {
    console.log("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π...\n");

    let createdCount = 0;
    let skippedCount = 0;

    for (const achievementData of defaultAchievements) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
      const existing = await prisma.achievement.findFirst({
        where: {
          name: achievementData.name,
          type: achievementData.type,
        },
      });

      if (existing) {
        console.log(`‚ö†Ô∏è  –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ "${achievementData.name}" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...`);
        skippedCount++;
        continue;
      }

      // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
      await prisma.achievement.create({
        data: achievementData,
      });

      console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ: "${achievementData.name}" (${achievementData.rarity})`);
      createdCount++;
    }

    console.log(`\nüéâ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!`);
    console.log(`üìä –°–æ–∑–¥–∞–Ω–æ: ${createdCount} –Ω–æ–≤—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π`);
    console.log(`‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ: ${skippedCount} —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö`);
    console.log(`üìà –í—Å–µ–≥–æ: ${createdCount + skippedCount} –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ`);

  } catch (error) {
    console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π:", error);
  } finally {
    await prisma.$disconnect();
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
initAchievements();
