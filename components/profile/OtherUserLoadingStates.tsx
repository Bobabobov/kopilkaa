// components/profile/OtherUserLoadingStates.tsx
"use client";

import { motion } from "framer-motion";
import Link from "next/link";

interface OtherUserLoadingStatesProps {
  state: "checking" | "unauthorized" | "loading" | "not-found";
}

export default function OtherUserLoadingStates({
  state,
}: OtherUserLoadingStatesProps) {
  const getContent = () => {
    switch (state) {
      case "checking":
        return {
          icon: "‚è≥",
          title: "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...",
          description: "",
          button: null,
        };
      case "unauthorized":
        return {
          icon: "üîí",
          title: "–î–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω",
          description:
            "–í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç –∏–ª–∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å, —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏",
          buttons: [
            {
              href: "/login",
              text: "–í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç",
              variant: "primary",
            },
            {
              href: "/register",
              text: "–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è",
              variant: "secondary",
            },
          ],
        };
      case "loading":
        return {
          icon: "‚è≥",
          title: "–ó–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è...",
          description: "",
          button: null,
        };
      case "not-found":
        return {
          icon: "üë§",
          title: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω",
          description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç",
          button: {
            href: "#",
            text: "–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ø–æ–∏—Å–∫—É",
            onClick: () => {
              // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥—Ä—É–∑–µ–π —Å –≤–∫–ª–∞–¥–∫–æ–π –ø–æ–∏—Å–∫–∞
              const event = new CustomEvent("open-friends-modal", {
                detail: { tab: "search" },
              });
              window.dispatchEvent(event);
            },
          },
        };
      default:
        return {
          icon: "‚ùì",
          title: "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞",
          description: "",
          button: null,
        };
    }
  };

  const content = getContent();

  return (
    <div className="min-h-screen flex items-center justify-center">
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="text-center bg-white/80 dark:bg-gray-800/80 backdrop-blur-xl rounded-3xl p-12 shadow-2xl border border-white/20 dark:border-gray-700/20"
      >
        <div className="text-6xl mb-4">{content.icon}</div>
        <h1 className="text-2xl font-bold text-gray-900 dark:text-white mb-4">
          {content.title}
        </h1>
        {content.description && (
          <p className="text-gray-600 dark:text-gray-400 mb-8 text-lg">
            {content.description}
          </p>
        )}
        {content.button &&
          (content.button.onClick ? (
            <button
              onClick={content.button.onClick}
              className="inline-flex items-center px-8 py-4 bg-gradient-to-r from-emerald-500 to-green-600 hover:from-emerald-600 hover:to-green-700 text-white font-semibold rounded-xl transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1"
            >
              {content.button.text}
            </button>
          ) : (
            <Link
              href={content.button.href as any}
              className="inline-flex items-center px-8 py-4 bg-gradient-to-r from-emerald-500 to-green-600 hover:from-emerald-600 hover:to-green-700 text-white font-semibold rounded-xl transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1"
            >
              {content.button.text}
            </Link>
          ))}
        {content.buttons && (
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            {content.buttons.map((button, index) => (
              <Link
                key={button.text || `button-${index}`}
                href={button.href as any}
                className={`inline-flex items-center px-6 py-3 font-semibold rounded-xl transition-all duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-1 ${
                  button.variant === "primary"
                    ? "bg-gradient-to-r from-emerald-500 to-green-600 hover:from-emerald-600 hover:to-green-700 text-white"
                    : "bg-white dark:bg-gray-700 hover:bg-gray-50 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 border border-gray-200 dark:border-gray-600"
                }`}
              >
                {button.text}
              </Link>
            ))}
          </div>
        )}
      </motion.div>
    </div>
  );
}
